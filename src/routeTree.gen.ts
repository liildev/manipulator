/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as LoginImport } from './routes/login';
import { Route as AuthenticatedImport } from './routes/_authenticated';
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index';
import { Route as AuthenticatedHistoryImport } from './routes/_authenticated/history';

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any);

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any);

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any);

const AuthenticatedHistoryRoute = AuthenticatedHistoryImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => AuthenticatedRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof AuthenticatedImport;
      parentRoute: typeof rootRoute;
    };
    '/login': {
      id: '/login';
      path: '/login';
      fullPath: '/login';
      preLoaderRoute: typeof LoginImport;
      parentRoute: typeof rootRoute;
    };
    '/_authenticated/history': {
      id: '/_authenticated/history';
      path: '/history';
      fullPath: '/history';
      preLoaderRoute: typeof AuthenticatedHistoryImport;
      parentRoute: typeof AuthenticatedImport;
    };
    '/_authenticated/': {
      id: '/_authenticated/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof AuthenticatedIndexImport;
      parentRoute: typeof AuthenticatedImport;
    };
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedHistoryRoute: typeof AuthenticatedHistoryRoute;
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute;
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedHistoryRoute: AuthenticatedHistoryRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
};

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
);

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren;
  '/login': typeof LoginRoute;
  '/history': typeof AuthenticatedHistoryRoute;
  '/': typeof AuthenticatedIndexRoute;
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute;
  '/history': typeof AuthenticatedHistoryRoute;
  '/': typeof AuthenticatedIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/_authenticated': typeof AuthenticatedRouteWithChildren;
  '/login': typeof LoginRoute;
  '/_authenticated/history': typeof AuthenticatedHistoryRoute;
  '/_authenticated/': typeof AuthenticatedIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '' | '/login' | '/history' | '/';
  fileRoutesByTo: FileRoutesByTo;
  to: '/login' | '/history' | '/';
  id:
    | '__root__'
    | '/_authenticated'
    | '/login'
    | '/_authenticated/history'
    | '/_authenticated/';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren;
  LoginRoute: typeof LoginRoute;
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/login"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/history",
        "/_authenticated/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_authenticated/history": {
      "filePath": "_authenticated/history.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
